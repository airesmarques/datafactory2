{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "AB-data-factory2"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/A_IXOFFEFF_TEMP')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							},
							"name": "AIXOFFEFF"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ADAPCICIN",
								"type": "DatasetReference"
							},
							"name": "AIXOFFEFFSINK"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tA as (IXOFFEFF as (row as (CDATE as string, COCODE as string, EFFTYPE as string, INDUSSTDCODE as string, LOLEGACYNUMBER as string, LONUMBER as string, LOTYPE as string, RANGE as string, STDCODE as string, UDATE as string, VERSIONCODE as string)[]))\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'xml',\n\tcontainer: 'blob01',\n\tvalidationMode: 'none',\n\tnamespaces: true,\n\twildcardPaths:['AIRBUS-RUAG-*/A_IXOFFEFF.xml']) ~> AIXOFFEFF\nAIXOFFEFF foldDown(unroll(A.IXOFFEFF.row, A.IXOFFEFF.row),\n\tmapColumn(\n\t\tCDATE = A.IXOFFEFF.row.CDATE,\n\t\tCOCODE = A.IXOFFEFF.row.COCODE,\n\t\tEFFTYPE = A.IXOFFEFF.row.EFFTYPE,\n\t\tINDUSSTDCODE = A.IXOFFEFF.row.INDUSSTDCODE,\n\t\tLOLEGACYNUMBER = A.IXOFFEFF.row.LOLEGACYNUMBER,\n\t\tLONUMBER = A.IXOFFEFF.row.LONUMBER,\n\t\tLOTYPE = A.IXOFFEFF.row.LOTYPE,\n\t\tRANGE = A.IXOFFEFF.row.RANGE,\n\t\tSTDCODE = A.IXOFFEFF.row.STDCODE,\n\t\tUDATE = A.IXOFFEFF.row.UDATE,\n\t\tVERSIONCODE = A.IXOFFEFF.row.VERSIONCODE\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tpostSQLs:['DROP TABLE IF EXISTS A_IXOFFEFF;\\n\\ndeclare @V_MAX_STRING INTEGER = CAST((SELECT max(len(RANGE)) AS Max_Length_String FROM [dbo].[A_IXOFFEFF_TEMP])AS INT)\\n\\nCREATE TABLE A_IXOFFEFF(\\n\tLONUMBER VARCHAR(18),\\n\tLOLEGACYNUMBER VARCHAR(10),\\n\tEFFTYPE VARCHAR(12),\\n\tSTDCODE VARCHAR(5),\\n\tVERSIONCODE VARCHAR(8),\\n\tINDUSSTDCODE VARCHAR(10),\\n\tCDATE VARCHAR(20),\\n\tUDATE VARCHAR(20),\\n\tLOTYPE VARCHAR(10),\\n\tCOCODE VARCHAR(10),\\n\tRANGE VARCHAR(12),\\n\tRANGE_START INTEGER,\\n\tRANGE_END INTEGER\\n)\\n\\nDROP TABLE IF EXISTS A_IXOFFEFF_SPLIT_TEMP;\\nCREATE TABLE A_IXOFFEFF_SPLIT_TEMP(\\n\tLONUMBER VARCHAR(18),\\n\tLOLEGACYNUMBER VARCHAR(10),\\n\tEFFTYPE VARCHAR(12),\\n\tSTDCODE VARCHAR(5),\\n\tVERSIONCODE VARCHAR(8),\\n\tINDUSSTDCODE VARCHAR(10),\\n\tCDATE VARCHAR(20),\\n\tUDATE VARCHAR(20),\\n\tLOTYPE VARCHAR(10),\\n\tCOCODE VARCHAR(10),\\n\tRANGE VARCHAR(12)\\n)\\n\\n\\n\\nDECLARE @PLONUMBER VARCHAR(18)\\nDECLARE @PLOLEGACYNUMBER VARCHAR(10)\\nDECLARE @PEFFTYPE VARCHAR(12)\\nDECLARE @PSTDCODE VARCHAR(5)\\nDECLARE @PVERSIONCODE VARCHAR(8)\\nDECLARE @PINDUSSTDCODE VARCHAR(10)\\nDECLARE @PCDATE VARCHAR(20)\\nDECLARE @PUDATE VARCHAR(20)\\nDECLARE @PLOTYPE VARCHAR(10)\\nDECLARE @PCOCODE VARCHAR(10)\\nDECLARE @PRANGE NVARCHAR(max)\\n\\n\\nDECLARE SPLIT_RANGE CURSOR LOCAL FAST_FORWARD FOR \\n        SELECT\\n                LONUMBER, LOLEGACYNUMBER, EFFTYPE, STDCODE, VERSIONCODE, INDUSSTDCODE, CDATE, UDATE, LOTYPE, COCODE, RANGE\\n        FROM [dbo].[A_IXOFFEFF_TEMP]\\n\\nOPEN SPLIT_RANGE\\nFETCH NEXT FROM SPLIT_RANGE \\nINTO @PLONUMBER, @PLOLEGACYNUMBER, @PEFFTYPE, @PSTDCODE, @PVERSIONCODE, @PINDUSSTDCODE, @PCDATE, @PUDATE, @PLOTYPE, @PCOCODE, @PRANGE\\n\\n \\nWHILE @@FETCH_STATUS = 0\\nBEGIN\\n\\n    INSERT INTO A_IXOFFEFF_SPLIT_TEMP\\n            SELECT @PLONUMBER, @PLOLEGACYNUMBER, @PEFFTYPE, @PSTDCODE, @PVERSIONCODE, @PINDUSSTDCODE, @PCDATE, @PUDATE, @PLOTYPE, @PCOCODE,\\n                    SPL.value FROM STRING_SPLIT(@PRANGE,\\',\\') AS SPL\\n    \\n            \t\tFETCH NEXT FROM SPLIT_RANGE \\n            \t\tINTO \\n                    @PLONUMBER, @PLOLEGACYNUMBER, @PEFFTYPE, @PSTDCODE, @PVERSIONCODE, @PINDUSSTDCODE, @PCDATE, @PUDATE, @PLOTYPE, @PCOCODE, @PRANGE\\nEND \\n\\n\\nINSERT INTO A_IXOFFEFF\\n        SELECT \\n         LONUMBER, LOLEGACYNUMBER, EFFTYPE, STDCODE, VERSIONCODE, INDUSSTDCODE, CDATE, UDATE, LOTYPE, COCODE, \\n\t\t RANGE,\\n         CAST(SUBSTRING(RANGE, 1, CHARINDEX(\\'-\\', RANGE) - 1) as INT) as RSTART,\\n         CAST(REVERSE( LEFT( REVERSE(RANGE), CHARINDEX(\\'-\\', REVERSE(RANGE))-1 ) ) AS INT) as REND\\n         From A_IXOFFEFF_SPLIT_TEMP WHERE RANGE like \\'%-%\\'\\n\\nINSERT INTO A_IXOFFEFF\\n        SELECT\\n         LONUMBER, LOLEGACYNUMBER, EFFTYPE, STDCODE, VERSIONCODE, INDUSSTDCODE, CDATE, UDATE, LOTYPE, COCODE,  \\n         RANGE, CAST(RANGE as INT), 0\\n         From A_IXOFFEFF_SPLIT_TEMP WHERE RANGE not like \\'%-%\\'\\n\\nDROP TABLE A_IXOFFEFF_SPLIT_TEMP;\\ndrop table A_IXOFFEFF_TEMP;\\n\\nSELECT * from A_IXOFFEFF;\\n\\n\\n'],\n\tmapColumn(\n\t\tCDATE,\n\t\tCOCODE,\n\t\tEFFTYPE,\n\t\tINDUSSTDCODE,\n\t\tLOLEGACYNUMBER,\n\t\tLONUMBER,\n\t\tLOTYPE,\n\t\tRANGE,\n\t\tSTDCODE,\n\t\tUDATE,\n\t\tVERSIONCODE\n\t)) ~> AIXOFFEFFSINK"
				}
			},
			"dependsOn": []
		}
	]
}